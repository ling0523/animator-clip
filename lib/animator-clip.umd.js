!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).AnimatorClip={})}(this,(function(t){"use strict";class e{constructor(t){this.id=void 0,this.style=void 0,this.value=void 0,this.speed=void 0,this.free=!1,this.interval=0,this.$options=t,this.$unit=void 0,this.$requestAnimationFrame=void 0,this.state=0,this.$events=[],this.$chainClip=void 0,this.$type=0,this.$initValue=void 0,this.$parent=void 0,this.$timeStamp=0,this.__init()}__init(){if(this.$options){if("object"!=typeof this.$options||!this.$options)throw new Error("The construction parameter of the clip must be a non-null object");if("boolean"==typeof this.$options.free?this.free=this.$options.free:this.free=!1,!this.free){if("string"!=typeof this.$options.style||!this.$options.style)throw new TypeError("The style argument should be a string");if(this.style=this.$options.style,"number"==typeof this.$options.value)this.value=this.$options.value,this.$unit=null;else{if("string"!=typeof this.$options.value||!this.$options.value)throw new TypeError("The value argument should be a number or string");if(this.value=parseFloat(this.$options.value),this.$options.value.endsWith("px"))this.$unit="px";else if(this.$options.value.endsWith("rem"))this.$unit="rem";else{if(!this.$options.value.endsWith("em"))throw new Error("Currently, only attribute values of px, rem, and em units are supported");this.$unit="em"}}if("number"!=typeof this.$options.speed)throw new TypeError("The speed argument should be a number");this.speed=this.$options.speed}}else this.free=!0,this.$options=void 0;this.$requestAnimationFrame=this.__getRequestAnimationFrame(),this.$events=[{name:"start",handler:function(){}},{name:"complete",handler:function(){}},{name:"beforeUpdate",handler:function(){}},{name:"update",handler:function(){}},{name:"stop",handler:function(){}},{name:"reset",handler:function(){}}]}start(){if(!this.$parent||!this.$parent.$el)throw new ReferenceError("The clip has not been added to the animator");if(!this.free){let t=this._getUnitCssValue();if(this.speed>0&&t>=this.value)return this;if(this.speed<0&&t<=this.value)return this}if(1==this.state||3==this.state)return this;this.$timeStamp=Date.now(),this.interval=0,this.state=1,this.$parent.$options.start.call(this.$parent,this,this.$parent.$el),this.__emit("start");let t=()=>{if(1!=this.state)return;let e=Date.now();if(this.interval=e-this.$timeStamp,this.$timeStamp=e,this.free)this.$parent.$options.beforeUpdate.call(this.$parent,this,this.$parent.$el),this.__emit("beforeUpdate"),this.$parent.$options.update.call(this.$parent,this,this.$parent.$el),this.__emit("update"),this.$requestAnimationFrame.call(window,t);else{let e=this._getUnitCssValue();this.$parent.$options.beforeUpdate.call(this.$parent,this,this.$parent.$el,this.style,e),this.__emit("beforeUpdate",[this.style,e]);let i=Number((e+this.speed).toFixed(2));this.$unit?this.$parent.$el.style.setProperty(this.style,i+this.$unit,"important"):this.$parent.$el.style.setProperty(this.style,i,"important"),this.$parent.$options.update.call(this.$parent,this,this.$parent.$el,this.style,i),this.__emit("update",[this.style,i]),this.speed>0&&i>=this.value||this.speed<0&&i<=this.value?(this.$unit?this.$parent.$el.style.setProperty(this.style,this.value+this.$unit,"important"):this.$parent.$el.style.setProperty(this.style,this.value,"important"),this.$timeStamp=0,this.interval=0,this.state=3,this.$parent.$options.complete.call(this.$parent,this,this.$parent.$el),this.__emit("complete"),this.$chainClip&&(this.$parent.hasClip(this.$chainClip)?this.$parent.removeClip(this.$chainClip).addClip(this.$chainClip):this.$parent.addClip(this.$chainClip),this.$chainClip.start())):this.$requestAnimationFrame.call(window,t)}};return this.$requestAnimationFrame.call(window,t),this}stop(){if(!this.$parent||!this.$parent.$el)throw new ReferenceError("The clip has not been added to the animator");return 1!=this.state||(this.$timeStamp=0,this.interval=0,this.state=2,this.$parent.$options.stop.call(this.$parent,this,this.$parent.$el),this.__emit("stop")),this}reset(){if(!this.$parent||!this.$parent.$el)throw new ReferenceError("The clip has not been added to the animator");return 0==this.state||(this.$timeStamp=0,this.interval=0,this.state=0,this.free||this.$parent.$el.style.setProperty(this.style,this.$initValue,"important"),this.$parent.$options.reset.call(this.$parent,this,this.$parent.$el),this.__emit("reset"),1==this.$type&&this.$parent.removeClip(this)),this}chain(t){if(!t)throw new TypeError("The parameter is not defined");if(!(t instanceof e))throw new TypeError("The parameter is not a Clip instance");if(t.$parent)throw new ReferenceError("The clip has been added to an animator instance and cannot be passed as a chain argument");return t.$type=1,this.$chainClip=t,t}emitComplete(){this.free&&0!=this.state&&3!=this.state&&(this.state=3,this.$parent.$options.complete.call(this.$parent,this,this.$parent.$el),this.__emit("complete"),this.$chainClip&&(this.$parent.hasClip(this.$chainClip)?this.$parent.removeClip(this.$chainClip).addClip(this.$chainClip):this.$parent.addClip(this.$chainClip),this.$chainClip.start()))}on(t,e){let i=this._getEvent(t);if(!i)throw new Error(t+" is an illegal event");return i.handler=e,this}__getRequestAnimationFrame(){let t=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame;if(!t){let e=0;t=function(t){let i=Date.now(),s=Math.max(0,1e3/60-(i-e));window.setTimeout(t,s),e=i+s}}return t}__emit(t,e){let i=this._getEvent(t);i&&(e?i.handler.call(this,this.$parent.$el,...e):i.handler.call(this,this.$parent.$el))}_getEvent(t){return this.$events.filter((e=>e.name==t))[0]}_getUnitCssValue(){let t=parseFloat(this._getCssStyle(this.$parent.$el,this.style));return"rem"==this.$unit?this._px2rem(t):"em"==this.$unit?this._px2em(this.$parent.$el,t):t}_getCssStyle(t,e){if("string"==typeof e){let i="";return i=document.defaultView&&document.defaultView.getComputedStyle?document.defaultView.getComputedStyle(t)[e]:t.currentStyle[e],i}return null}_rem2px(t){let e=this._getCssStyle(document.documentElement,"font-size");return Number((t*parseFloat(e)).toFixed(2))}_px2rem(t){let e=this._getCssStyle(document.documentElement,"font-size");return Number((t/parseFloat(e)).toFixed(2))}_px2em(t,e){let i=t.parentNode||t.parentElement,s=this._getCssStyle(i,"font-size");return Number((e/parseFloat(s)).toFixed(2))}_em2px(t,e){let i=t.parentNode||t.parentElement,s=this._getCssStyle(i,"font-size");return Number((e*parseFloat(s)).toFixed(2))}}t.Animator=class{constructor(t,e){this.$el=t,this.$options=e,this.clips=[],this.__init()}__init(){if("string"==typeof this.$el&&this.$el&&(this.$el=document.body.querySelector(this.$el)),!this.$el)throw new ReferenceError("The first construction argument of an animator should be an element or selector");if(!(this.$el instanceof Node)||1!==this.$el.nodeType)throw new TypeError("The first construction argument of an animator should be an element or selector");"object"==typeof this.$options&&this.$options||(this.$options={}),"function"!=typeof this.$options.start&&(this.$options.start=function(){}),"function"!=typeof this.$options.complete&&(this.$options.complete=function(){}),"function"!=typeof this.$options.beforeUpdate&&(this.$options.beforeUpdate=function(){}),"function"!=typeof this.$options.update&&(this.$options.update=function(){}),"function"!=typeof this.$options.stop&&(this.$options.stop=function(){}),"function"!=typeof this.$options.reset&&(this.$options.reset=function(){})}hasClip(t){return!(!t.$parent||"number"!=typeof t.id||isNaN(t.id))&&this.clips.some((e=>e.id===t.id))}addClip(t){if(!t)throw new TypeError("Parameter does not exist");if(!(t instanceof e))throw new TypeError("The parameter is not a Clip instance");if(!this.hasClip(t)&&t.$parent)throw new Error("The clip has been added to other animator");if(this.hasClip(t))throw new Error("The clip has been added to the animator");if(0==this.clips.length)t.id=0;else{let e=this.clips[0].id;t.id=e+1}return t.$parent=this,t.free||(t.$unit?t.$initValue=t._getUnitCssValue()+t.$unit:t.$initValue=t._getUnitCssValue()),this.clips.unshift(t),this}removeClip(t){if(!t)throw new TypeError("Parameter does not exist");if(!(t instanceof e))throw new TypeError("The parameter is not a Clip instance");if(!t.$parent||"number"!=typeof t.id||isNaN(t.id))throw new Error("The clip has not been added to the animator");if(!this.hasClip(t))throw new Error("The clip does not belong to the animator");return this.clips=this.clips.filter((e=>e.id!=t.id)),t.state=0,t.$timeStamp=0,t.interval=0,t.free||(t.$parent.$el.style.setProperty(t.style,t.$initValue,"important"),t.$initValue=void 0),t.$parent=void 0,t.id=void 0,this}removeAllClips(){return[...this.clips].forEach((t=>{this.removeClip(t)})),this}getClips(){return this.clips.filter((t=>1==t.state))}getStopClips(){return this.clips.filter((t=>2==t.state))}getCompleteClips(){return this.clips.filter((t=>3==t.state))}start(){return this.clips.forEach((t=>{t.start()})),this}stop(){return this.clips.forEach((t=>{t.stop()})),this}reset(){return this.clips.forEach((t=>{t.reset()})),this}},t.Clip=e,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
